<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFwAAABDCAYAAAARb2IWAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABJ0RVh0U29mdHdhcmUAR3JlZW5zaG90XlUIBQAAGutJREFUeF7tXAtsVNeZJsR1
        XMpGFkIRWqEo2qJutlKrqIq6bTdadZNVu6qqVVv1savd7lbb7ipt013atGmaByEBysMYG2Ns41eMMWA7
        gzMYYxxnMMMwHsbj8TAej8fj8TAMZvAL23jBvPzg2+8/997xMLGxSVNvRPnR0fXMnDmP7/yP7z/nDEvw
        QBZVHgC+yPIA8EWWB4AvsjwAfJHlAeCLLA8AX2R5APgiywPAF1keAL7IsiDAp6amMD09HS/G6wdy73JX
        wDs6OrBp0ybs2JGFjAyjZCI7Owfbtm3H66+/gUuXLqm6t2/fVs/55Nix97Bz506WXcjKymaRNjOwfft2
        7Nq1C83NzXrNhcnZnh41JmOMWntayc0twJYt23D69GlV9+OgJLMCLhos0tjYCJPJhFAoDIfDCZfTrYqT
        JRyKIC+vEHa7BtBCJjM4OIR169bD5XLDbnPAxiJPq9XKNp18bVOLcevWLf0b88tbb72FhgYLv+9iOza9
        2GGxWBEMhrmQ2WhtbVV1F6oUf0yZFXADvJ6eEA4cqEQk3EugvXC7WVxeBXh391kuRi0a33tf1b0b4JOT
        k+p55Eg9avgdaU/akfa8Hj88Ho8CPBqNoqCgIF5/LjGACwa7aG3ZiMUG4u3FC1/7/UFqeraq+3GRu7oU
        cRdlZWVKUwRkp1OA0YpMRjTr6NFjqq5hFXOJLMimTVviYLhaPFxEFrWATlVCoRCKi4sxOjqqvjOfRh45
        cgS1tXXw+4JwOhLH50YoGEHlAROajltV3fnGt1hyV8CvXr2K/Pw9CARDcLq0ibgImEzK6/WjiaZbWfWO
        qjuXVk5Pa6B5ve0oLatAOByDQxaP7bXobcoiyLOzqxuVldVo9/nUd+azmszMnWw3oMajKcRMEYXIycvD
        lStX9G98POSugMuE8/IKNECUJhqAEySPTwFeVLJPrz27GKDtKSyBpckGDxdKgaIAb4OzhUUHSSzJZDLf
        1WoMrZcFLFcL2Btvz8nYIL5cwK6rb8Dh2sOq7sdJ7gq4yOHDh1UAEo02tFKKAp7PrOxcatvs5mqAMzJ6
        Gdk5uQQnCrvDFV+0uJbroPv8AfbVRNAPqe/N1a5IVVWVcmkSA5SGSxs64OFwRPUXDAZV3btZymLLnIAb
        gzSbD1NbGmnuPRpIamKiTZofF6Zy48YNVTdZDA2tqTGjxkxfG6BrYhuJIMdBl6Dn8SqWUVT0tvreXHLz
        5k3s3p2vwDaCuNaGuCcPbHa7opyzSnJcmCdOfNQyL+AnT56kXzURXA0sBbY8WQKki6V79ylfP5eIlm7b
        tkNZiKHZGjieGfdCDdXclrgqDzKzMmcNmMaYhNWU0Z0E/HowZ1vStkPcSSCIA5WVOEGqKZLolm7Poelz
        9TUlZY5gK+9LuVfrmRNwYxAXL15EWUUFguTdMjmlUZygBD5xEYWFpRgZGVF1E8UYqMvlQl5BEbq6DKaj
        F7YhMcClwCdr0RdDrKagsPCuEzlwoGrGzYk7iY/JRTcSUgt8/fp1vbYmM2BPYqyyBs6f/BrXraf4Whun
        zHcucBcq8v3ZFi9R5vXhAmZeQfGd1JCTs9tdCBHwiopKnD9/XtWdrbPMzEw0MVieae9U3xdgBSixmhde
        WEvuHVNtafSQgZNWk52Tg4HBQb0FapsAobctrGP37t0I0D0JrTQYiiiAaHddHYPl4VpV94PjuQXn8z+B
        aclSWB5+GMVLUuBf/5L+2YyMjY2h+2wPjh47hsrqSrq4IjWPrVu3YvPmzSpXqK6uJiWt5TgC8WzbEFGW
        uRRmXsDHx8dRtKsIfhU0mSG6teKkr+zqOYu9eys4Yaeqa3QyYx19agsgFIrqwGi8u7d3AOvXb8QLa3+F
        XiYtGk3UrEc0vjPUTXWZnNUFtLhalcsIEFy7Xbc4tivBOMRguYX9hc+e1WtzTLiNa1MT6u/ohg04sGQJ
        YsuWYXTlcgwsfwRmvu6urFKfO5lN55KVbcjcitLKClSaTbDYrFSYJpUN2xkbJOOWp7w2m2upcBVqAWR7
        oa6uDkNDQ6qtuWRewEX25+2FRyZH7bR63LB6WdxO+EI+1FADLO9r2aZhksazptoMs6kB4c4wXA6C6QjA
        7QjBbQ8ie3s+8kv2whXkQrItSVysdr9m4O5mtH39OTjTPw3Ls1/DaLNdtSeyJX83LHRFbnJ1WfiAje0S
        cL/bTyCc2JiTqdfURBZNNgpudnfDsmQloo88goHUZQimpMG/PBWxT3wCljWfAUb7sWe/CWarEx5ari/k
        p8V4VZxxu32ay9Pdn+AgVhqg1YfoasXSxcpquADbd2SjpKQM585FtQEkyYIArznWCBMpWHt7N7x2dsZi
        s3DSnGRtXSP27duv6iWa0Y1bN7GBJhikT/ZS+9wckJ3FywywpqYOB/dXobyoHF59IqKt4/xeuKgADUtW
        wUHNcy5dAj+f1Xx9rrqc3ncK6156WYsnnLiMw86njcDHglGUF5fD0abtmyT748Hf/BZetjW6YhmG09IQ
        ejgVEZbxVcth5/vuH/6QtaZxsrODCymLx7FyIb1UFM2VssRzBs2NzRQt6ItLE9crezkCfNuZNq3zBLkr
        4AaAJq6cib7R7wmg3dGOkYsjuEErFTIYo0/tPn9O1ROZ0jPOky2nkVtRjECEabeeuosm+8J+rN+4Hn19
        fdiTuwc+gua0uiE855p5L+roV8PUuvHHCEz6Mozx2f2pT9HfpuHSSSZEt6dZnwHTKYD70Oj10OK8CBCk
        3IxsRRk/IP0X4F6+Gn76bTdLPQFuenQNF3MlfHwdpsbX8b2x+gpWHoO1jvy+RViZP+7u7gR49iJB28F5
        Dg0Po7i4FD49Y06UBQHewg6rqk3qb/Gt487T8O0pRduePQiSgaCZ0X5kWPtchC48443NcDSRhRAMO/m1
        k2zFS8BttkZk7tyqquWR2jVYnBgdvYHpM630p6kYXvYIotRsK/+2UrMtBGJgeRpiKsg9Clztw8i5c/A2
        2KmJXljYpicUUjzfXKMFy2Tt7s54FT6200uNrlyzGjjr4HgHcIH+2rz68wR9GUJpKewrBej1Izp4nu7N
        i7bOGNrpioT5iOYaJRwOo7s7DI9YpwKagNNKFS1l8lbPLDc/v0Dv/U5ZkEsRmSRbcTFCv5v+VwQiHYGV
        q+BZsRKu5ekcaBpMD69A5MUXMdndBQlRpWXl8FHrRAtPtjHAUVui3jBqyyvRcloLsuWHanC0+TQwMY2G
        NU9jgP41TGAaV63BIFnALTKbMz9/kf0x0KWlIsBn/bPPckFvwdd8hm6KrsjpQCgaRTbBGxjQmI0oSpyh
        UEHMq9cgyAWzcAFxvhtOnxMlmVlQtnChnz78aQTJXCJsv/qxx/nmdXT0DaDWXI8KBujSsjIUkqnt238Q
        xXyWl1eoLYimJtkCDtGHn1cupbXNw7/JsnJzFNMRSWZKswI+zUHG5dIQgr98iSb3OJwEOkYtGEtPw02a
        +uijn8Lwo8uogTR/aqFbwFq+Brb/WktNvKKC1ak2FyyiAfSFMVcYhW9m49pV8dZAhKwC16+i9u+/rthC
        mAvX9NQz9FXjaCELMqTjpz9n3zR5+l/7khW4VHEAY9OTDL5O9HR2KsZQSFBEDKtUVJJy6RjdA4H2P5SC
        nn9fq4Lyf6xdizAX32pz4sLYKG73X4TtiacIegrnkIKax75A/zYCR4sVjU3vY+TSIA14GNeuXVMUsK+v
        H8dIGc1mszrkkMz4dLOLljqm6K58JpIY0wy5A/A7VmN6ApFdO2B6/DNo4mSDKSmILktFiP41yNcSgKIr
        VyKYvkqBIe8JAxC/G01djiYCH608SG2fxuj0TYxcGIGz1gbz0eN6B5Tp63D9248YJMWFpKH+775FU5rG
        wI3L2Ji9EZGekFbvxk1YnnyaQY7+VnwwwcHkTbQyWPZSw0qpdZKhiiRP0vvjXyD40EOKoSB6DjUnT8BU
        YUasPYyW1jZYnTYMjY1ggiBanvgi66ZigONxP0nQL/j1VuYWWYRmWummTRlM2EqQIZbD8Yp8MA9IADyR
        8171e1H75S9rWicgUrNkosIc7Gmr4H76r9G17hWESyvQlpWPyO/IAL74N3DSzYiWy2LYlQmnofVzX0af
        qQoTQwO4cm0c1yf0fZc+mvY/fgsn2b6wBNsP/oWDANo7GeBIuYqrS9Hqa9HqUnor9qlFufn4o1yg5eje
        VaiCtlP2TTZmYDpxcsbfI+OwfPZLaGLQdX7nH/jGDby1cyctzgUn52h32+FnkHNbGgkS7fFSPyppDVEu
        UM8nP8n+HkP72jdwK9avtZcgE7duYWpC4/eGnDxpI5Nr11/pMptLmVmJm4hseB025TqWYIjaGvsEzZx/
        W1Y/if43N2L6XJhfmFKaO06zFbcxNHQJk3IsdrEfQ/v3471vfAOmpRq1E1pno5nali2H7+m/xNAPnsPo
        955FA13QCYLdsGQZHOvWUzUncdbTRTrmQkdPGNVMOk5QG0X6IzHcuDKM+k/+lfLxEkCrH2PwY0LzzsEj
        OFI9e7CcajoOD/uWMXTm56qxvvzrNxDw+9HktRBwgk1XJ5TV6XEhNjaI6x1dsHz+GSoLXRjdZpDB25Ky
        Gu7vfBc43kikL2uNf0iZcSlXr6Lxm9/kCuuugVrt4d/FS9MR2ryBRDaGW7duIHDhIiw+sgOyDqvFphKO
        AvpUW6ubPPk2XKfJALh+04zWsYytqPvCV7hgHDAnLq5HaT9LPbW0bs1TmDpSr+p3us5QW51oaWmBl9y9
        3mJB7RENyNLcYly9/r8IvvWaYhtjj6Up64vl56OjK4QhXQOTTdj9/R/AxcXxrnqC/FWjrm+8uBkRMg2b
        u0lLuEgvPSxRXxibX9+AKzevgxNlHHoeJmp4lOM+T20XLOwE3/bkU/CRs1/cV4Lz7x3FVMcZwHMG022c
        fxsJQLuVMaYIrb94CYd+/BPcHOxT/RpjiwM+cWkAZdRsCUwh+moB3vKVZ3A5wAYpHcEAchiY7Myq6gjy
        cW+A4PjQ6etBMSlZi7cDx2lSuazT5m9DsCfIlJo6NT2FafrZi3sPov23b+D0D38G24/+B4HygxzFJE73
        dJBXN8FPsJ2M9JLItHh8DGj09+Z3qQfXsH1LNi4zWE2HOjhxgsA44hWX9edP0ktcU+MzXKLxnLwYRVP6
        E2ij8rjoukR6zl9EWW4lwoEI+7EqwO0MzhaWsD+CumIGPM7FkEuSxn/zu3Claq5SFMZNdyOLKK+D6Y/B
        RxcbZT/hdCpVerryBvKZ8PtsPidOaXv7hiQEzSlE/ulHTDrSFNhdr/+Oo58x0VHSwtLSKqazfbA5Ja32
        Kf4p2ZW50oxTJ+w4cFD2HjhIxbu95LIE0esjT+5Cqz/Jt+liaqhHXX09F0naEwDc5O4+dRAhgEtAqqyW
        c8sAa9+C/W+/qlzE8Ip0BcD5zeu0hpLEn52hXFpYNLRgj3rv0vAICrJLEQ32si87AaeVsr8mtV1BTaci
        vfbSOty4rC2iIRMXOtBblAnXt78N1599GoG0JxAhwMHlK+BJSVO0VRIqFxdD/hYrjHIxKmgRoR0b9VY0
        UYAb55Gd6zNY6S8w3nREvRaZ1j8bJ5UrzSpB2B0mHXNrfo8c2Bdgak2+ur+oDHsLShDyBvUNJa0EmXKX
        VVag9uhMm4lyvP44ga2HLxiE1SWLJf7UDQs5blXVIezbdwAW9ie3BvpGhjBY+44y7bH0VEQ5yZqlyxl6
        NM5rjBUT12H+zJPopHb7Usi9I9puphyUFBJw2QJ2Emg3g6edrtFvdzB22GCPUXnsFqx/bT26u7TTomSZ
        vM5Qfe4srp2yofdgJc7szMGZTa/A9d8v4PR//hSul36FjqytaC8sRNehKtzo1ZmWLgpwI9YOEqjbbTPp
        aCJzEQ+Uw0bsEtVlZ49PF7XE5yVAZAovktvWMND5g37WIQuQdJhFDqDlcs5EUkQ36JuztRWVTCI6mbnF
        02RqnpeBbcuW7cjOzoPHH1aAe2j609NXYF31WfpW2fVLVSbc8eLzqi1DIkU5cPH9EBek5bnn9Hc1KczM
        U25ELMmtTvpdCNISvQ47mtw2OKMcP+eUm5uLKmbC0R7mCh+hJLiUJEkKQCI1x+pQ19QAD4Omk9oog5Vd
        Mwu145mvPQt3gK6G0V6iv52fe+kmJDloODzjFw0xgsjQyDAKi8tVyqxdMpJ2nequyfe//6/YubsEwVgv
        zjCzdFmduErX17lpK003HcHUFAwQVBvp4qjlqGoPl4dgWbEaY49KIpaGWNKtgoZj9SigxfXIXRarWI62
        +ylj9skmm+xEeunTIxF1yCEXid7auBEnyHgmE5RGrEmKsXdkiFxiuq5fZJLPEpVWRAE+G0FPFEMbG+ob
        1J6v7C/Yqb0O+nK3O0jzd+AVmqGcAImGyrmigBaJRbFl+xZEzmpaMlvmJUDk7ypVrkcmL67KxYWUFHnt
        r1+BWTaSAn54bGI1XnSfDeDahfMwPbwSYSZjw2kpiiYKbfVv24mGz31J+e7htKWoJaeeGNJOo27r1zVu
        899aUl8r+wl7tEMMq8QbxiQ3rUhoorhCG+dn9/kRiMVY14qyimJkZGxivKlTZwSGJM9JsLwjJ0iSuTU8
        QYxG7aea1b0ROV1XGzZ6katrspcgT+090XxqO011a+ad+9PJMkHAc3IKtPNN2W+W76t9Z61N2YtW27oE
        wU9fbqUbG2e+0PWz3yg20EtgY0uZBT+cytdLFX2LkWnJZ47v/bPeiybGPCLnzuHll19WLioSmTkc0eKO
        9G2MQ85JNQWSmwBeLoCJFpudnYv33rPEreZeZEGAGxYgewilpdpNLNkZMwA3/HX8b34m7EUOeoVtiCQn
        JYlSWPS22kM2DpXjp/oKeA85s0dpfmdzC5pPnEDR2yXMGy6jbvUalTPEUpYwHad7SU1FJOUhFUzVzt8p
        ObO8UwzQBwbk1Gk99u8/gEg0ho5OZr4KaANs/RmfE4En+5K5y8FDNePOK6+9gbNnZ7am5/MUIgsC3JDL
        l8ewc9dudhrSNDxxUC2tahtXnvJatEE24Y0rFLMNxrh3Yjr0Lk3VorEH1VbbHaDbVB90UaEQKkv2wiLJ
        EuVC3m4VNGUjLZi6BB7SsgG6GNn3tj7zVXaqL3JS38bii4bW1NRgR3aOujgkAV4AVdYqgVVorZqTdvBg
        HHTLmKSexC/RduN27kLkngCXgLBt+w5qoi/esXqy3AE2ByKHuQcOMLmhzOa7RYz3j5MCynanaI5qTwdc
        ga7al2sQbvJ58uRX15H1aUGJiMH+9DNqnye4bClCacxC05cxi03Blfc0Gjpf3yKyNVHF4Lpj5051Rmmz
        2RWgsrct/coYZBG0sbBwXMrVMEHr6xvChg2b4jd05+rPkHsCXOTtfXvVdmjiAOJg8ynJi/g72bbspkaK
        zGVqxr3Dc+fOq9P/ZMANDXc6PAjQYioazCg0awe+cf/Z5kVDygqVUQ48ugxWarn/+Z+xU33iCzBzQ2Tn
        r83jUWeSolimGrOKV9qRHsfBEtdyKXzdwjHK6dWWLVvU7V+Ru4G+YMAndTOU++KSlIgWa26FA0jQbuPm
        08bfb1HcfSEiVzGKi8vUqbucvmuLKBPUTNlj96KXn63f/nt0RcPqO7cNQCmDe0tRt2QNqeIq1H2RrmRc
        S4QWKgJQcoyRMQkj27RpM8qpDOLupMic46DrrsYrp1qcs3B3kY8E8KlpbUCyuW4y1cQ7VyuvnnJIrGm3
        bMLPdvNpLrlKmpWVtYt+X27CJrSpCrWKiyv+NGvzZv0buiRqb/gcBt4l39cPT5L570JFwEoETP4+XHtE
        Xes4ZT9NMsDgynFpCmGMU7vbvm3bNgwPa0eNc1n1ggE3BiGUSvyc4tzsULs+IKuuabewE7n5JOa5UJGh
        FRaVKJ+oUUEJWlqRPs5GB1Wf7maHqp+4iLNN7MOCnSjSbmI/ciH1ly++pFxI4g1gNXcWuTgql4PkppnI
        Hwy4IXLEJL/FkQ5kZcWUtKdDmZZEfblxe6/y7rtkKnX1tByZjJZtSnFzIc+0t+PNDW9+4PpaXPTJSeb3
        UYCdLMa2RKhHboXlqtthEqsMJRPwe7rl+oeZ/LxR1Z3Lrdwz4MJUCvLy1I+tsrIy1RUw+VGUFNkzefXV
        VzGoX1Oba5UTxRjYKXJm+b1OYntS5PVGptbJl40WKjKGhYxjobKB8zYsWnMnWsyRy671cs2O7kfkIwM8
        UYyJyFM6+CgmJoAaIP2h7SZ/78O2Y4h8//dkI3cCrhX52YvZXIf3dcX4owD+cRYDXLn8GYnM7Ph9mAU0
        rKq/f0CxL4lTSrMJvEGPhbdXHqhGINCl6s7Vx30LuAHS3r171WXLd955B4NJFy2lzt0WQN5P1NSd9N8N
        jRbFzQ3AVSGTEsB3794T/0HYXHJfAm6A1NPTo8CWYzox99ycPLKdgwiFeuY0+dlEMtHNm7exjVpduwmy
        nndIkZMiecov/uaT+1bDRQoLCwmEE+3tnWhv61S/D7U0WpGXW8iAnEWtP8TPXbh8+bLKXOVeojASYUNy
        c6qrq0tZhjATu4M5htpZpGbrWbUGuEvt3e/Ynq0YlsjdFvO+A9yYrFykFI3r7e2Fw64xCSk+b5DAx5Tv
        ra+3UOOrlRXIpXtZoJycHOSRheXn5yvu39DQoHIOyaytNlJgw40owF1qEaqqTMhg7rEQuW9divx2XzaU
        5P8LUNsFagtC48zGloRkywKmtlEVVKBKUiMZbzAYUZ/FkxwW7RcX+tOh/eSmgYu2bt26eMyYLyDfV4Ab
        2i13W4S79/f3I0ifK9mhAZoqKkNMAJ/FyGxVdqu/b3ymCgE2gJanuBHZ4fzdb1+NX9xcSFy4LzVc/LHs
        aEoiJi5BMkMJdqLBcQCNcoeLSHqPf8tPTJy0EHX8x0VSWs9FKWAceLukLK7RhobPJ/d10BQOLkEvKztH
        HQ02WW3KfUjp6u6muxCNvhNgo8j78nlnp3E/PMRFtKmL9pL9dnTMXPRciGYbcl8Dbogc+tqbm5GTm4tM
        an05g2FtXZ3i1LKVLPshov0+sgwBWV4LK5FTe6knR4XyQ1w5UPF4tJtoH1bue8CTTX14ZERpq/wvFEfq
        6tUupViA/KJa/l8B+RWbvM4hZz9MsN81m8nnwx/Y/bwXrU6UPwkNF7mbjxX+LWevUuRviQFzcY0PC7Qh
        fzKAJ4qAtlDg7qXuQuRPEvD/T3kA+CLLA8AXWR4AvqgC/B/mcTeLdynAiAAAAABJRU5ErkJggg==
</value>
  </data>
</root>